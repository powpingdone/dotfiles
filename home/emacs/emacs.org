#+TITLE: PPD's Emacs
#+AUTHOR: powpingdone
#+STARTUP showeverything
#+PROPERTY: header-args:emacs-lisp :tangle yes

* TABLE OF CONTENTS
:PROPERTIES:
:TOC: :include all :ignore this :ignore 
:END:

:CONTENTS:
- [[#notes][NOTES:]]
- [[#priority-load][PRIORITY LOAD]]
  - [[#emacs-main-config][Emacs main config]]
  - [[#evil-mode-vim-binds][Evil Mode (vim binds)]]
  - [[#which-key][Which Key]]
  - [[#generalel-binding-creation][General.el (binding creation)]]
- [[#org-mode][ORG MODE]]
  - [[#general-org-mode-packages][General org mode packages]]
- [[#apperance][APPERANCE]]
  - [[#doom-themes][Doom themes]]
  - [[#doom-modeline][Doom Modeline]]
:END:

* NOTES:
+ use-package is already loaded in nix, and as such packages come from nix

* PRIORITY LOAD

** Emacs main config

#+begin_src emacs-lisp

  (scroll-bar-mode -1)
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (set-fringe-mode 16)
  (require 'use-package-ensure)
  (setq use-package-always-ensure t)

#+end_src

** Evil Mode (vim binds)

#+begin_src emacs-lisp

    (use-package evil
        :ensure t
      :demand t
      :init
      (setq evil-vsplit-window-right t
      evil-split-window-below t
      evil-toggle-key "C-~")
      :config
      (evil-mode 1))

    (use-package evil-collection
        :ensure t
      :after evil
      :config
      (evil-collection-init))

    (use-package evil-tutor
        :ensure t
    )

#+end_src

** Which Key

#+begin_src emacs-lisp

  (use-package which-key
        :ensure t
    :diminish which-key-mode
    :custom
    (which-key-idle-delay 0.325))

#+end_src

** General.el (binding creation)

#+begin_src emacs-lisp

  (use-package general
        :ensure t
    :config
    (general-evil-setup))

#+end_src


* ORG MODE

** General org mode packages

#+begin_src emacs-lisp

  (use-package org-make-toc
        :ensure t
    :hook org-mode)

#+end_src

* APPERANCE

** Doom themes

#+begin_src emacs-lisp

  (use-package doom-themes
        :ensure t
    :demand t
    :config
    (setq doom-themes-enable-bold t
  	  doom-themes-enable-italic t)
    (load-theme 'doom-ephemeral t)
    (doom-themes-visual-bell-config)
    (doom-themes-org-config))

#+end_src

** Doom Modeline

#+begin_src emacs-lisp

      (use-package doom-modeline
        :ensure t
        :demand t
        :hook after-init
  :init
  (setq doom-modeline-height 28))

#+end_src
